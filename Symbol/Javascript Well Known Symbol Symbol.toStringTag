ECMAScript Well Known Symbol Symbol.toStringTag is used as a property for "A String valued property that is used in the creation of the default string description of an object. Accessed by the built-in method Object.prototype.toString()".

Object identification via the toString() method will retrieve the instance identifier specified by Symbol.toStringTag, defaulting to Object.

Built-in types have this value already specified, but custom class instances require explicit definition:

Copy
let s = new Set();

console.log(s);                      // Set(0) {}
console.log(s.toString());           // [object Set]
console.log(s[Symbol.toStringTag]);  // Set

class Foo {}
let foo = new Foo();

console.log(foo);                      // Foo {}
console.log(foo.toString());           // [object Object]
console.log(foo[Symbol.toStringTag]);  // undefined

class Bar {
  constructor() {
    this[Symbol.toStringTag] = 'Bar';
  }
}
let bar = new Bar();

console.log(bar);                      // Bar {}
console.log(bar.toString());           // [object Bar]
console.log(bar[Symbol.toStringTag]);  // Bar
