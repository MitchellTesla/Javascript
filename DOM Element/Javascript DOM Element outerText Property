The outerText property works in the same way as innerText except that it includes the node on which it's called.

For reading text values, outerText and innerText essentially behave in the exact same way.

In writing mode, outerText behaves differently.

The outerText actually replaces the entire element, including its child nodes.

Consider the following: div.outerText = "Hello world!";

This single line of code is equivalent to the following two lines:

Copy
let text = document.createTextNode("Hello world!");
div.parentNode.replaceChild(text, div);
Essentially, the new text node completely replaces the element on which outerText was set.

After that point in time, the element is no longer in the document and cannot be accessed.

The outerText property is nonstandard.

It is supported in all modern browsers except for Firefox.
